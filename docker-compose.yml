version: '3.8'  # Using Docker Compose file format version 3.8

services:
  postgres:
    image: postgres:latest  # Use the latest official PostgreSQL image
    environment:
      POSTGRES_PASSWORD: postgres123  # Sets the superuser password
      POSTGRES_USER: postgres         # Sets the superuser name
      POSTGRES_DB: auctionsdb         # Sets the default database to be created
    ports:
      - "5433:5432"  # Maps port 5433 of the container to port 5432 on the host
    volumes:
      - ./mylocal_pgdata:/var/lib/postgresql/data  # Bind mount for PostgreSQL data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongo123
    ports:
      - 27018:27017  # already mongo running on local 
    volumes:
      - ./mylocal_mongodata:/var/lib/mongodb/data  # Bind mount for PostgreSQL data
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongo localhost:27017/test --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine         # default credentials guest/guest
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  auction-svc:
    image: ashutoshpandey/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres123;
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7001:80
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  search-svc:
    image: ashutoshpandey/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=mongodb://root:mongo123@localhost:27018/auctionsdb?authSource=admin
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  identity-svc:
    image: ashutoshpandey/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres123;
    ports:
      - 5000:80
    depends_on:
      mongodb:
        condition: service_healthy

  gateway-svc:
    image: ashutoshpandey/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
    depends_on:
      postgres:
        condition: service_healthy
  