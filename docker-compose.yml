version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=auctionsdb
    ports:
      - "5432:5432"
    volumes:
      - ./mylocal_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongo123
    ports:
      - "27017:27017"
    volumes:
      - ./mylocal_mongodata:/var/lib/mongodb/data
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 5s
      retries: 5

  auction-svc:
    image: ashutoshpandey/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres123;Database=auctionsdb;
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - "7001:80"
      - "7777:7777"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  search-svc:
    image: ashutoshpandey/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=mongodb://root:mongo123@mongo:27017/auctionsdb?authSource=admin
      - AuctionServiceUrl=http://auction-svc
    ports:
      - "7002:80"
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  bid-svc:
    image: ashutoshpandey/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=mongodb://root:mongo123@mongo:27017/auctionsdb?authSource=admin
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - "7003:80"
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  identity-svc:
    image: ashutoshpandey/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres123;Database=auctionsdb;
    ports:
      - "5000:80"
    depends_on:
      postgres:
        condition: service_healthy

  gateway-svc:
    image: ashutoshpandey/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6001:80"
    depends_on:
      rabbitmq:
        condition: service_healthy

  notification-svc:
    image: ashutoshpandey/notification-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - "7004:80"
    depends_on:
      rabbitmq:
        condition: service_healthy

  web-app:
    image: ashutoshpandey/web-app
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXTAUTH_SECRET=somethingreallyreallysecret
      - NEXTAUTH_URL=http://localhost:3000
      - API_URL=http://gateway-svc:6001/
      - ID_URL=http://identity-svc:5000
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc:6001/notifications
    depends_on:
      - identity-svc
